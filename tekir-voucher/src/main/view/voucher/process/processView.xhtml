<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:t="http://java.sun.com/jsf/composite/telveComponents"
                xmlns:p="http://primefaces.org/ui"
                template="/layout/containerViewTabBase.xhtml">

    <ui:param name="bean" value="#{processHome}" />
    <ui:param name="entityName" value="process" />
    <ui:param name="viewIdentifier" value="#{bean.entity.processNo} - #{bean.entity.topic}" />
    <ui:param name="showCaption" value="true"/>
    <ui:param name="dontShowContentHeader" value="false" />

    <ui:define name="metadata">
        <f:metadata>
            <f:viewParam name="eid" value="#{processHome.id}" />
            <f:viewAction action="#{processHome.initData()}" />
        </f:metadata>
    </ui:define>

    <ui:define name="context-menu">
        <li>
            <p:commandLink title="#{messages['general.button.Delete']}" action="#{bean.delete()}" 
                           rendered="#{bean.showDelete() and not empty bean.entity.id and bean.hasDeletePermission() }">
                <i class="fa fa-trash-o"></i>
                <h:outputText value=" #{messages['general.button.Delete']}" />
            </p:commandLink>
        </li>
    </ui:define>

    <ui:define name="state-header">

        <style>


            .ribbon-state { 
                list-style: none; 
                overflow: hidden; 
                padding-left: 0px;
                /*font: 18px Helvetica, Arial, Sans-Serif;*/
            }
            .ribbon-state li { 
                float: left; 
            }
            .ribbon-state li a {
                color: white;
                text-decoration: none; 
                padding: 10px 0 10px 55px;
                background: brown;                   /* fallback color */
                background: silver; /* hsla(34,85%,35%,1); */
                position: relative; 
                display: block;
                float: left;
                pointer-events: none;
                cursor: default;
            }
            .ribbon-state li a:after { 
                content: " "; 
                display: block; 
                width: 0; 
                height: 0;
                border-top: 50px solid transparent;           /* Go big on the size, and let overflow hide */
                border-bottom: 50px solid transparent;
                border-left: 30px solid silver; /*hsla(34,85%,35%,1)*/
                position: absolute;
                top: 50%;
                margin-top: -50px; 
                left: 100%;
                z-index: 2; 
            }	
            .ribbon-state li a:before { 
                content: " "; 
                display: block; 
                width: 0; 
                height: 0;
                border-top: 50px solid transparent;           /* Go big on the size, and let overflow hide */
                border-bottom: 50px solid transparent;
                border-left: 30px solid white;
                position: absolute;
                top: 50%;
                margin-top: -50px; 
                margin-left: 1px;
                left: 100%;
                z-index: 1; 
            }	
            .ribbon-state li:first-child a {
                padding-left: 10px;
            }

            .ribbon-state li a.NEUTRAL        { background:        #3c8dbc; }
            .ribbon-state li a.NEUTRAL:after  { border-left-color: #3c8dbc; }
            .ribbon-state li a.OPEN           { background:        #f39c12; }
            .ribbon-state li a.OPEN:after     { border-left-color: #f39c12; }
            .ribbon-state li a.DRAFT          { background:        #f39c12; }
            .ribbon-state li a.DRAFT:after    { border-left-color: #f39c12; }
            .ribbon-state li a.POSITIVE       { background:        #00a65a; }
            .ribbon-state li a.POSITIVE:after { border-left-color: #00a65a; }
            .ribbon-state li a.NEGATIVE       { background:        #d33724; }
            .ribbon-state li a.NEGATIVE:after { border-left-color: #d33724; }


            .ribbon-state li:last-child a {
                pointer-events: none;
                cursor: default;
                padding-right: 10px;
            }
            .ribbon-state li:last-child a:after { border: 0; }
            .ribbon-state li a:hover { background: hsla(34,85%,25%,1); }
            .ribbon-state li a:hover:after { border-left-color: hsla(34,85%,25%,1) !important; }

        </style>


        <ul class="ribbon-state pull-right">

            <ui:repeat value="#{processHome.processSteps}" var="ms">
                <li ><a href="#" class="#{processHome.steps[ms]}">#{messages['feature.caption.'.concat(ms)]}</a></li>
            </ui:repeat>
        </ul>
    </ui:define>

    <ui:define name="caption">
        <ul class="caption-states">
            <t:stateOutputFeatureLink label="general.label.Account" 
                                      value="#{featureController.getFeatureLink(bean.getAllFeaturePointer(bean.entity.account))}" />                                        	
            <t:stateOutputEnum label="general.label.Type" itemLabel="processType." value="#{bean.entity.type}"/>
            <t:stateOutputAny label="voucher.label.Counter" >
                <t:cellOutputNumber value="#{bean.entity.counter}" maxFraction="0" minFraction="0" />
            </t:stateOutputAny>

            <t:stateOutputEnum label="general.label.Status" itemLabel="processStatus." value="#{bean.entity.status}"/>
        </ul>
    </ui:define>

    <ui:remove>
        <ui:define name="caption">
            <div class="row">
                <t:outputText label="voucher.label.Topic" value="#{bean.entity.topic}" columnClass="col-md-6"/>                          
                <t:outputFeatureLink label="general.label.Account" 
                                     value="#{featureController.getFeatureLink(bean.getAllFeaturePointer(bean.entity.account))}" 
                                     columnClass="col-md-6"/>                                        	
                <t:outputEnum label="general.label.Type" itemLabel="processType." value="#{bean.entity.type}"/>
                <t:outputEnum label="general.label.Status" itemLabel="processStatus." value="#{bean.entity.status}"/>
                <t:outputText label="voucher.label.ProcessNo" value="#{bean.entity.processNo}" />
                <t:outputNumber label="voucher.label.Counter" value="#{bean.entity.counter}" maxFraction="0" minFraction="0" />
            </div>  


        </ui:define>   
    </ui:remove>

</ui:composition>